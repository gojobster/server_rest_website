/*
 * This file is generated by jOOQ.
 */
package com.jobster.server.model.tables;


import com.jobster.server.model.Indexes;
import com.jobster.server.model.Jobster;
import com.jobster.server.model.Keys;
import com.jobster.server.model.tables.records.OffersSkillsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OffersSkills extends TableImpl<OffersSkillsRecord> {

    private static final long serialVersionUID = -332500974;

    /**
     * The reference instance of <code>jobster.offers_skills</code>
     */
    public static final OffersSkills OFFERS_SKILLS = new OffersSkills();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OffersSkillsRecord> getRecordType() {
        return OffersSkillsRecord.class;
    }

    /**
     * The column <code>jobster.offers_skills.id_offer_skill</code>.
     */
    public final TableField<OffersSkillsRecord, Integer> ID_OFFER_SKILL = createField("id_offer_skill", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>jobster.offers_skills.id_skill</code>.
     */
    public final TableField<OffersSkillsRecord, Integer> ID_SKILL = createField("id_skill", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>jobster.offers_skills.id_offer</code>.
     */
    public final TableField<OffersSkillsRecord, Integer> ID_OFFER = createField("id_offer", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>jobster.offers_skills</code> table reference
     */
    public OffersSkills() {
        this(DSL.name("offers_skills"), null);
    }

    /**
     * Create an aliased <code>jobster.offers_skills</code> table reference
     */
    public OffersSkills(String alias) {
        this(DSL.name(alias), OFFERS_SKILLS);
    }

    /**
     * Create an aliased <code>jobster.offers_skills</code> table reference
     */
    public OffersSkills(Name alias) {
        this(alias, OFFERS_SKILLS);
    }

    private OffersSkills(Name alias, Table<OffersSkillsRecord> aliased) {
        this(alias, aliased, null);
    }

    private OffersSkills(Name alias, Table<OffersSkillsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> OffersSkills(Table<O> child, ForeignKey<O, OffersSkillsRecord> key) {
        super(child, key, OFFERS_SKILLS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Jobster.JOBSTER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.OFFERS_SKILLS_OFFER_SKILLS_OFFER_IDX, Indexes.OFFERS_SKILLS_OFFER_SKILLS_SKILL_IDX, Indexes.OFFERS_SKILLS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<OffersSkillsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_OFFERS_SKILLS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OffersSkillsRecord> getPrimaryKey() {
        return Keys.KEY_OFFERS_SKILLS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OffersSkillsRecord>> getKeys() {
        return Arrays.<UniqueKey<OffersSkillsRecord>>asList(Keys.KEY_OFFERS_SKILLS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<OffersSkillsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<OffersSkillsRecord, ?>>asList(Keys.OFFER_SKILLS_SKILL, Keys.OFFER_SKILLS_OFFER);
    }

    public Skills skills() {
        return new Skills(this, Keys.OFFER_SKILLS_SKILL);
    }

    public Offers offers() {
        return new Offers(this, Keys.OFFER_SKILLS_OFFER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffersSkills as(String alias) {
        return new OffersSkills(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffersSkills as(Name alias) {
        return new OffersSkills(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OffersSkills rename(String name) {
        return new OffersSkills(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OffersSkills rename(Name name) {
        return new OffersSkills(name, null);
    }
}
