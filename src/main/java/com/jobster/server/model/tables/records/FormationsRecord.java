/*
 * This file is generated by jOOQ.
 */
package com.jobster.server.model.tables.records;


import com.jobster.server.model.tables.Formations;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FormationsRecord extends UpdatableRecordImpl<FormationsRecord> implements Record7<Integer, String, String, String, String, String, String> {

    private static final long serialVersionUID = 928660253;

    /**
     * Setter for <code>jobster.formations.id_formation</code>.
     */
    public void setIdFormation(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>jobster.formations.id_formation</code>.
     */
    public Integer getIdFormation() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>jobster.formations.type_en</code>.
     */
    public void setTypeEn(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>jobster.formations.type_en</code>.
     */
    public String getTypeEn() {
        return (String) get(1);
    }

    /**
     * Setter for <code>jobster.formations.type_es</code>.
     */
    public void setTypeEs(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>jobster.formations.type_es</code>.
     */
    public String getTypeEs() {
        return (String) get(2);
    }

    /**
     * Setter for <code>jobster.formations.type_fr</code>.
     */
    public void setTypeFr(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>jobster.formations.type_fr</code>.
     */
    public String getTypeFr() {
        return (String) get(3);
    }

    /**
     * Setter for <code>jobster.formations.type_it</code>.
     */
    public void setTypeIt(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>jobster.formations.type_it</code>.
     */
    public String getTypeIt() {
        return (String) get(4);
    }

    /**
     * Setter for <code>jobster.formations.type_de</code>.
     */
    public void setTypeDe(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>jobster.formations.type_de</code>.
     */
    public String getTypeDe() {
        return (String) get(5);
    }

    /**
     * Setter for <code>jobster.formations.type_por</code>.
     */
    public void setTypePor(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>jobster.formations.type_por</code>.
     */
    public String getTypePor() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, String, String, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, String, String, String, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Formations.FORMATIONS.ID_FORMATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Formations.FORMATIONS.TYPE_EN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Formations.FORMATIONS.TYPE_ES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Formations.FORMATIONS.TYPE_FR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Formations.FORMATIONS.TYPE_IT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Formations.FORMATIONS.TYPE_DE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Formations.FORMATIONS.TYPE_POR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getIdFormation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getTypeEn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getTypeEs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getTypeFr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getTypeIt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getTypeDe();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getTypePor();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getIdFormation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTypeEn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getTypeEs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getTypeFr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getTypeIt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getTypeDe();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getTypePor();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FormationsRecord value1(Integer value) {
        setIdFormation(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FormationsRecord value2(String value) {
        setTypeEn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FormationsRecord value3(String value) {
        setTypeEs(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FormationsRecord value4(String value) {
        setTypeFr(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FormationsRecord value5(String value) {
        setTypeIt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FormationsRecord value6(String value) {
        setTypeDe(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FormationsRecord value7(String value) {
        setTypePor(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FormationsRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FormationsRecord
     */
    public FormationsRecord() {
        super(Formations.FORMATIONS);
    }

    /**
     * Create a detached, initialised FormationsRecord
     */
    public FormationsRecord(Integer idFormation, String typeEn, String typeEs, String typeFr, String typeIt, String typeDe, String typePor) {
        super(Formations.FORMATIONS);

        set(0, idFormation);
        set(1, typeEn);
        set(2, typeEs);
        set(3, typeFr);
        set(4, typeIt);
        set(5, typeDe);
        set(6, typePor);
    }
}
