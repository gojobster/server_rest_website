/*
 * This file is generated by jOOQ.
 */
package com.jobster.server.model;


import com.jobster.server.model.tables.Companies;
import com.jobster.server.model.tables.Countries;
import com.jobster.server.model.tables.Education;
import com.jobster.server.model.tables.Formations;
import com.jobster.server.model.tables.Idioms;
import com.jobster.server.model.tables.OfferFormation;
import com.jobster.server.model.tables.Offers;
import com.jobster.server.model.tables.OffersSkills;
import com.jobster.server.model.tables.Referrals;
import com.jobster.server.model.tables.Skills;
import com.jobster.server.model.tables.UserFormation;
import com.jobster.server.model.tables.UserIdiom;
import com.jobster.server.model.tables.Users;
import com.jobster.server.model.tables.UsersSkills;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Jobster extends SchemaImpl {

    private static final long serialVersionUID = -1329071616;

    /**
     * The reference instance of <code>jobster</code>
     */
    public static final Jobster JOBSTER = new Jobster();

    /**
     * The table <code>jobster.companies</code>.
     */
    public final Companies COMPANIES = com.jobster.server.model.tables.Companies.COMPANIES;

    /**
     * The table <code>jobster.countries</code>.
     */
    public final Countries COUNTRIES = com.jobster.server.model.tables.Countries.COUNTRIES;

    /**
     * The table <code>jobster.education</code>.
     */
    public final Education EDUCATION = com.jobster.server.model.tables.Education.EDUCATION;

    /**
     * The table <code>jobster.formations</code>.
     */
    public final Formations FORMATIONS = com.jobster.server.model.tables.Formations.FORMATIONS;

    /**
     * The table <code>jobster.idioms</code>.
     */
    public final Idioms IDIOMS = com.jobster.server.model.tables.Idioms.IDIOMS;

    /**
     * The table <code>jobster.offers</code>.
     */
    public final Offers OFFERS = com.jobster.server.model.tables.Offers.OFFERS;

    /**
     * The table <code>jobster.offers_skills</code>.
     */
    public final OffersSkills OFFERS_SKILLS = com.jobster.server.model.tables.OffersSkills.OFFERS_SKILLS;

    /**
     * The table <code>jobster.offer_formation</code>.
     */
    public final OfferFormation OFFER_FORMATION = com.jobster.server.model.tables.OfferFormation.OFFER_FORMATION;

    /**
     * The table <code>jobster.referrals</code>.
     */
    public final Referrals REFERRALS = com.jobster.server.model.tables.Referrals.REFERRALS;

    /**
     * The table <code>jobster.skills</code>.
     */
    public final Skills SKILLS = com.jobster.server.model.tables.Skills.SKILLS;

    /**
     * The table <code>jobster.users</code>.
     */
    public final Users USERS = com.jobster.server.model.tables.Users.USERS;

    /**
     * The table <code>jobster.users_skills</code>.
     */
    public final UsersSkills USERS_SKILLS = com.jobster.server.model.tables.UsersSkills.USERS_SKILLS;

    /**
     * The table <code>jobster.user_formation</code>.
     */
    public final UserFormation USER_FORMATION = com.jobster.server.model.tables.UserFormation.USER_FORMATION;

    /**
     * The table <code>jobster.user_idiom</code>.
     */
    public final UserIdiom USER_IDIOM = com.jobster.server.model.tables.UserIdiom.USER_IDIOM;

    /**
     * No further instances allowed
     */
    private Jobster() {
        super("jobster", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Companies.COMPANIES,
            Countries.COUNTRIES,
            Education.EDUCATION,
            Formations.FORMATIONS,
            Idioms.IDIOMS,
            Offers.OFFERS,
            OffersSkills.OFFERS_SKILLS,
            OfferFormation.OFFER_FORMATION,
            Referrals.REFERRALS,
            Skills.SKILLS,
            Users.USERS,
            UsersSkills.USERS_SKILLS,
            UserFormation.USER_FORMATION,
            UserIdiom.USER_IDIOM);
    }
}
